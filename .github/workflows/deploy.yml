name: Deploy Strapi to AWS ECS Fargate

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      ECR_REPOSITORY: strapi-app-aviral
      ECR_REGISTRY: 607700977843.dkr.ecr.us-east-2.amazonaws.com

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" > image.txt
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}

      - name: Upload image URL artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-url
          path: image.txt

      - name: Download image URL artifact
        uses: actions/download-artifact@v4
        with:
          name: image-url

      - name: Read image URL into environment variable
        id: read-image
        run: echo "IMAGE_URL=$(cat image.txt)" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Apply Terraform with new image
        run: |
          cd terraform
          terraform apply -auto-approve -var="image_uri=${{ env.IMAGE_URL }}"
